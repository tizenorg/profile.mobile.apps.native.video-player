/*
* Copyright (c) 2000-2015 Samsung Electronics Co., Ltd All Rights Reserved
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
* http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*
*/
#define MINI_W 692
#define MINI_H 180
#define TOP_PADDING 10
#define LEFT_PADDING 16
#define RIGHT_PADDING 20
#define BOTTOM_PADDING 12
#define ALBUM_ART_SIZE 156 156
#define BUTTON_SIZE_MIN_MAX	80 80
#define BIG_BTN_SIZE_MIN_MAX 102 102
#define BUTTON_EXPAND_OFFSET 0
#define BUTTON_CLOSE_SIZE_MAX 30 30

#define ALBUM_ART_LD_SIZE 130 130

#define MC_BG						30 28 28 0


#define MC_IMG_REW_NORMAL				"mini_controller/btn_video_prev_nor.png"
#define MC_IMG_REW_PRESSED				"mini_controller/btn_video_prev_press.png"
#define MC_IMG_PLAY_NORMAL				"mini_controller/btn_video_play_nor.png"
#define MC_IMG_PLAY_PRESSED				"mini_controller/btn_video_play_press.png"
#define MC_IMG_PAUSE_NORMAL				"mini_controller/btn_video_pause_nor.png"
#define MC_IMG_PAUSE_PRESSED			"mini_controller/btn_video_pause_press.png"
#define MC_IMG_FF_NORMAL				"mini_controller/btn_video_next_nor.png"
#define MC_IMG_FF_PRESSED				"mini_controller/btn_video_next_press.png"
#define MC_IMG_CLOSE_NORMAL				"mini_controller/btn_close_nor.png"
#define MC_IMG_CLOSE_PRESSED			"mini_controller/btn_close_press.png"
#define MC_IMG_PROGRESS_BG				"mini_controller/video_progress_bg.png"
#define MC_IMG_PROGRESS_BAR				"mini_controller/video_progress.png"


#define MC_PART_AREA_FROM_LEFT(__name, __left_part, __width, __height) \
part { name: __name; \
	type: SPACER; \
	scale: 1; \
	mouse_events: 0; \
	description { state: "default" 0.0; \
		rel1 { relative: 1.0 0.5; to: __left_part; } \
		rel2 { relative: 1.0 0.5; to: __left_part; } \
		min: __width __height; \
		fixed: 1 1; \
		align: 0.0 0.5; \
	} \
}

#define MC_PART_ICON_BTN(__name, __to, __normal, __pressed, __btn_min_max) \
part { name: __name"_clip"; \
	type: RECT; \
	scale: 1; \
	mouse_events: 0; \
	description { state: "default" 0.0; \
		rel1.to: __name"_bg"; \
		rel2.to: __name"_bg"; \
		color: 255 255 255 255; \
	} \
	description { state: "hide" 0.0; \
		inherit: "default" 0.0; \
		visible: 0; \
	} \
} \
part { name: __name"_bg"; \
	type: IMAGE; \
	scale: 1; \
	mouse_events: 0; \
	clip_to: __name"_clip"; \
	description { state: "default" 0.0; \
		rel1 { relative: 0.5 0.5; to: __to; } \
		rel2 { relative: 0.5 0.5; to: __to; }\
		min: __btn_min_max; \
		max: __btn_min_max; \
		image.normal: __normal; \
		fixed: 1 1; \
		align: 0.5 0.5; \
	} \
	description { state: "pressed" 0.0; \
		inherit: "default" 0.0; \
		image.normal: __pressed; \
	} \
} \
part { name: __name; \
	type: RECT; \
	scale: 1; \
	mouse_events: 1; \
	clip_to: __name"_clip"; \
	description { state: "default" 0.0; \
		rel1.to: __name"_bg"; \
		rel2.to: __name"_bg"; \
		color: 0 0 0 0; \
	} \
}

#define MC_PART_TEXT_BTN(__name, __to, __text_part_name) \
part { name: __name"_clip"; \
	type: RECT; \
	scale: 1; \
	mouse_events: 0; \
	description { state: "default" 0.0; \
		rel1.to: __to; \
		rel2.to: __to; \
		color: 255 255 255 255; \
	} \
	description { state: "hide" 0.0; \
		inherit: "default" 0.0; \
		visible: 0; \
	} \
} \
part { name: __name"_bg"; \
	type: SPACER; \
	scale: 1; \
	mouse_events: 0; \
	clip_to: __name"_clip"; \
	description { state: "default" 0.0; \
		rel1.to: __to; \
		rel2.to: __to; \
	} \
	description { state: "pressed" 0.0; \
		inherit: "default" 0.0; \
	} \
} \
part { name: __text_part_name; \
	type: TEXT; \
	scale: 1; \
	mouse_events: 0; \
	clip_to: __name"_clip"; \
	description { state: "default" 0.0; \
		rel1.to: __name"_bg"; \
		rel2.to: __name"_bg"; \
		text { \
			font: "Tizen:style=Medium"; \
			size: 28; \
			align: 0.5 0.5; \
		} \
		color: 149 149 149 255; \
	} \
} \
part { name: __name; \
	type: RECT; \
	scale: 1; \
	mouse_events: 1; \
	clip_to: __name"_clip"; \
	description { state: "default" 0.0; \
		rel1.to: __to; \
		rel2.to: __to; \
		color: 0 0 0 0; \
	} \
}

#define MC_PART_RECT(__name, __to, __sx, __sy, __ex, __ey) \
part { \
	name: __name; \
	mouse_events: 1; \
	repeat_events: 1; \
	type: RECT; \
	scale: 1; \
	description { \
		state: "default" 0.0; \
		align: 0 0; \
		visible: 1; \
		rel1 { \
			relative: __sx __sy; \
			to: __to; \
		} \
		rel2 { \
			relative: __ex __ey; \
			to: __to; \
		} \
		color: 0 0 0 0; \
	}\
	description { \
		state: "hide" 0.0; \
		visible: 0; \
	}\
}

#define MC_PART_SWALLOW(__name, __to, __sx, __sy, __ex, __ey) \
part { \
	name: __name; \
	mouse_events: 1; \
	type: SWALLOW; \
	scale: 1; \
	description { \
		state: "default" 0.0; \
		align: 0.5 0.5; \
		fixed: 1 1; \
		visible: 1; \
		fixed:1 1;\
		rel1 { \
			relative: __sx __sy; \
			to: __to; \
		} \
		rel2 { \
			relative: __ex __ey; \
			to: __to; \
		} \
		color: 0 0 0 0; \
	} \
}

#define MC_PROGRAM_BTN_ACTION(__btn, __down_emission, __down_src, __up_emission, __up_src, __clicked_emission, __clicked_src) \
program { \
	name: __btn"_after_down"; \
	signal: "mouse,down,1"; \
	source: __btn; \
	script { \
		set_state(PART:__btn"_bg", "pressed", 0.0); \
		emit(__down_emission, __down_src); \
	} \
} \
program { \
	source: __btn; \
	signal: "mouse,down,1"; \
	action: RUN_PLUGIN "touch_sound_plugin"; \
	after:  __btn"_after_down"; \
	transition: ACCELERATE 0.02;\
} \
program { \
	signal: "mouse,up,1"; \
	source: __btn; \
	script { \
		set_state(PART:__btn"_bg", "default", 0.0); \
		emit(__up_emission, __up_src); \
	} \
} \
program { \
	signal: "mouse,clicked,1"; \
	source: __btn; \
	action: SIGNAL_EMIT __clicked_emission __clicked_src; \
}

#define MC_PROGRAM_BTN_VISIBLE(__btn, __show_signal, __hide_signal) \
program { \
	signal: __show_signal; \
	source: "*"; \
	action: STATE_SET "default" 0.0; \
	target: __btn"_clip"; \
} \
program { \
	signal: __hide_signal; \
	source: "*"; \
	action: STATE_SET "hide" 0.0; \
	target: __btn"_clip"; \
}

collections {

plugins {
	plugin {
		name: "touch_sound_plugin";
		source: "feedback";
		param: "FEEDBACK_TYPE_SOUND FEEDBACK_PATTERN_TAP";
		}
	}

group {
	name: "video-minicontroller";
	images {
		image: MC_IMG_REW_NORMAL COMP;
		image: MC_IMG_REW_PRESSED COMP;
		image: MC_IMG_PLAY_NORMAL COMP;
		image: MC_IMG_PLAY_PRESSED COMP;
		image: MC_IMG_PAUSE_NORMAL COMP;
		image: MC_IMG_PAUSE_PRESSED COMP;
		image: MC_IMG_FF_NORMAL COMP;
		image: MC_IMG_FF_PRESSED COMP;
		image: MC_IMG_CLOSE_NORMAL COMP;
		image: MC_IMG_CLOSE_PRESSED COMP;
        image: MC_IMG_PROGRESS_BG COMP;
        image: MC_IMG_PROGRESS_BAR COMP;
	}
	parts {
		part{ name: "bg";
			type : RECT;
			scale : 1;
			mouse_events: 0;
			description {
				state: "default" 0.0;
				min : 0 MINI_H;
				fixed: 1 1;
				rel1{ relative : 0 0;}
				rel2{ relative : 1 1;}
				color : MC_BG;
			}
		}

		part { name: "padding.top";
			type: SPACER;
			scale: 1;
			mouse_events: 0;
			description { state: "default" 0.0;
				rel1 { relative: 0 0; to: "bg"; }
				rel2 { relative: 1 0; to: "bg"; }
				min: 0 TOP_PADDING;
				fixed: 0 1;
				align: 0 0;
			}
		}

		part { name: "padding.left";
			type: SPACER;			scale: 1;
			mouse_events: 0;
			description { state: "default" 0.0;
				rel1 { relative: 0 0; to: "bg"; }
				rel2 { relative: 0 1; to: "bg"; }
				min: LEFT_PADDING 0;
				fixed: 1 0;
				align: 0 0;
			}
		}

		part { name: "padding.right";
			type: SPACER;
			scale: 1;
			mouse_events: 0;
			description { state: "default" 0.0;
				rel1 { relative: 1 0; to: "bg"; }
				rel2 { relative: 1 1; to: "bg"; }
				min: RIGHT_PADDING 0;
				fixed: 1 0;
				align: 1 0;
			}
		}

		part { name: "padding.bottom";
			type: SPACER;
			scale: 1;
			mouse_events: 0;
			description { state: "default" 0.0;
				rel1 { relative: 0 1; to: "bg"; }
				rel2 { relative: 1 1; to: "bg"; }
				min: 0 BOTTOM_PADDING;
				fixed: 0 1;
				align: 0 1;
			}
		}

		part { name: "padding_for_albumart.top";
			type: SPACER;
			scale: 1;
			description { state: "default" 0.0;
				rel2 { relative: 1.0 0.0; }
				min: 0 12;
				fixed: 0 1;
				align: 0.0 0.0;
			}
		}

        part { name: "padding_for_albumart.bottom";
			type: SPACER;
			scale: 1;
			description { state: "default" 0.0;
				rel1 { relative: 0 1; to: "bg"; }
				rel2 { relative: 1 1; to: "bg"; }
				min: 0 12;
				fixed: 0 1;
				align: 0 1;
			}
		}

		part { name: "albumarmt_bg";
			type: RECT;
			scale: 1;
			mouse_events: 0;
			description { state: "default" 0.0;
				rel1 { relative: 1.0 1.0; to_x: "padding.left"; to_y: "padding_for_albumart.top"; }
				rel2 { relative: 1.0 0.0; to_x: "padding.left"; to_y: "padding_for_albumart.bottom"; }
				min: ALBUM_ART_SIZE;
				max: ALBUM_ART_SIZE;
				fixed: 1 1;
				align: 0.0 0.0;
				visible: 0;
			}
		}

		part { name: "albumart_image";
			type: SWALLOW;
			scale: 1;
			mouse_events: 1;
			description { state: "default" 0.0;
				rel1 { relative: 0.5 0.5; to: "albumarmt_bg"; }
				rel2 { relative: 0.5 0.5; to: "albumarmt_bg"; }
				min: ALBUM_ART_SIZE;
				max: ALBUM_ART_SIZE;
				fixed: 1 1;
				align: 0.5 0.5;
			}
		}

		part { name: "right_area";
			type: SPACER;
			scale: 1;
			mouse_events: 0;
			description { state: "default" 0.0;
				rel1 { relative: 1.0 1.0; to_x: "albumarmt_bg"; to_y: "padding.top"; }
				rel2 { relative: 0.0 0.0; to_x: "padding.right"; to_y: "padding.bottom"; }
				align: 0.0 0.0;
			}
		}

		part { name: "elm.text";		// title
			type: SWALLOW;
			mouse_events: 0;
			scale: 1;
			description { state: "default" 0.0;
			   rel1 { relative: 0.0 1.0; to_x: "right_area"; to_y: "padding.top"; offset: 16 0;}
			   rel2 { relative: 458/520 1.0; to_x: "right_area"; to_y: "padding.top";}
			   min: 442 36;
			   fixed: 1 1;
			   align: 0.0 0.0;
			}
		}

		part { name: "close_btn_left_padding";
			type: SPACER;
			scale: 1;
			mouse_events: 0;
			description { state: "default" 0.0;
				rel1 { relative: 1.0 1.0; to_x: "elm.text"; to_y: "padding.top"; offset: 12 0;}
				rel2 { relative: 1.0 1.0; to_x: "elm.text"; to_y: "padding.top"; offset: 12 0;}
				min: BUTTON_CLOSE_SIZE_MAX;
                max: BUTTON_CLOSE_SIZE_MAX;
				fixed: 1 1;
				align: 1.0 0.0;
			}
			description { state: "landsape" 0.0;
				inherit: "default" 0.0;
				min: 308 86;
			}
		}
		MC_PART_AREA_FROM_LEFT("close_btn_area", "close_btn_left_padding", BUTTON_CLOSE_SIZE_MAX, BUTTON_CLOSE_SIZE_MAX)
		MC_PART_ICON_BTN("close_btn", "close_btn_area", MC_IMG_CLOSE_NORMAL, MC_IMG_CLOSE_PRESSED, BUTTON_CLOSE_SIZE_MAX)


		/* progress bg image */
		part {
			name: "progress_bg";
			type: IMAGE;
			mouse_events: 0;
			scale: 1;
			description {
				state: "default" 0.0;
				align: 0.5 0;
				visible:1;
				image { normal: MC_IMG_PROGRESS_BG; }
				min: 484 8;
				max: 484 8;
				fixed: 1 1;
				rel1 { relative: 0.0 1.0; to_x: "right_area"; to_y: "elm.text"; offset: 16 0; }
				rel2 { relative: 1.0 1.0; to_x: "right_area"; to_y: "elm.text";}
			}
		}
		/* progress */
		MC_PART_RECT("progress_area", "progress_bg", 0, 0, 1, 1)
		MC_PART_SWALLOW("progress_box", "progress_area", 0, 0, 1, 1)

		part { name: "button_area";
			type: RECT;
			scale: 1;
			description { state: "default" 0.0;
				rel1 { relative: 0 1; to_x: "right_area"; to_y: "progress_bg"; offset: 0 15;}
				rel2 { relative: 1 0; to_x: "right_area"; to_y: "padding.bottom"; }
                                align: 0.5 0.0;
                                visible: 0;
			}
		}

		part { name: "rew_btn_area";
			type: SPACER;
			scale: 1;
			mouse_events: 0;
			description { state: "default" 0.0;
				rel1 { relative: 0.0 0.5; to: "button_area"; offset: 108 0;}
				rel2 { relative: 0.0 0.5; to: "button_area"; offset: 108 0;}
				min: BUTTON_SIZE_MIN_MAX;
				fixed: 1 1;
				align: 0.0 0.5;
			}
		}
		MC_PART_ICON_BTN("rew_btn", "rew_btn_area", MC_IMG_REW_NORMAL, MC_IMG_REW_PRESSED, BUTTON_SIZE_MIN_MAX)

		MC_PART_AREA_FROM_LEFT("rew_right_padding", "rew_btn_area", 21, 102)

		MC_PART_AREA_FROM_LEFT("play_pause_btn_area", "rew_right_padding", 102, 102)
		MC_PART_ICON_BTN("play_btn", "play_pause_btn_area", MC_IMG_PLAY_NORMAL, MC_IMG_PLAY_PRESSED, BIG_BTN_SIZE_MIN_MAX)
		MC_PART_ICON_BTN("pause_btn", "play_pause_btn_area", MC_IMG_PAUSE_PRESSED, MC_IMG_PAUSE_NORMAL, BIG_BTN_SIZE_MIN_MAX)

		MC_PART_AREA_FROM_LEFT("play_pause_right_padding", "play_pause_btn_area", 21, 86)

		MC_PART_AREA_FROM_LEFT("ff_btn_area", "play_pause_right_padding", 80, 80)
		MC_PART_ICON_BTN("ff_btn", "ff_btn_area", MC_IMG_FF_NORMAL, MC_IMG_FF_PRESSED, BUTTON_SIZE_MIN_MAX)

	}

	programs {
		MC_PROGRAM_BTN_ACTION("rew_btn", "rew_btn_down", "edje", "rew_btn_up", "edje", "rew_btn_clicked", "edje")

		MC_PROGRAM_BTN_ACTION("play_btn", "play_btn_down", "edje", "play_btn_up", "edje", "play_btn_clicked", "edje")
		MC_PROGRAM_BTN_VISIBLE("play_btn", "show_play_btn", "hide_play_btn")

		MC_PROGRAM_BTN_ACTION("pause_btn", "pause_btn_down", "edje", "pause_btn_up", "edje", "pause_btn_clicked", "edje")
		MC_PROGRAM_BTN_VISIBLE("pause_btn", "show_pause_btn", "hide_pause_btn")

		MC_PROGRAM_BTN_ACTION("ff_btn", "ff_btn_down", "edje", "ff_btn_up", "edje", "rew_btn_clicked", "edje")

		MC_PROGRAM_BTN_ACTION("close_btn", "close_btn_down", "edje", "close_btn_up", "edje", "close_btn_clicked", "edje")

		program { name: "albumart_cb";
		   signal: "mouse,clicked,1";
		   source: "albumart_image";
			script{
			   emit("albumart_clicked", "edje");
		   }
		}
		program{
			name: "albumart_cb_after_down";
			source: "albumart_image";
			signal: "mouse,down,1";
			transition: ACCELERATE 0.02;
		}
		program {
			name: "albumart_cb_down";
			source: "albumart_image";
			signal: "mouse,down,1";
			action: RUN_PLUGIN "touch_sound_plugin";
			after:	"albumart_cb_after_down";
			transition: ACCELERATE 0.02;
		}
		program { name: "set_pause_icon";
		   signal: "set_pause";
		   source: "*";
		   script{
				emit("hide_play_btn", "edje");
				emit("show_pause_btn", "edje");
		   }
		}
		program { name: "set_play_icon";
		   signal: "set_play";
		   source: "*";
		   script{
				emit("show_play_btn", "edje");
				emit("hide_pause_btn", "edje");
		   }
		}
	}

}


group {
	name: "video-minicontroller-ld";
	images {
		image: MC_IMG_REW_NORMAL COMP;
		image: MC_IMG_REW_PRESSED COMP;
		image: MC_IMG_PLAY_NORMAL COMP;
		image: MC_IMG_PLAY_PRESSED COMP;
		image: MC_IMG_PAUSE_NORMAL COMP;
		image: MC_IMG_PAUSE_PRESSED COMP;
		image: MC_IMG_FF_NORMAL COMP;
		image: MC_IMG_FF_PRESSED COMP;
		image: MC_IMG_CLOSE_NORMAL COMP;
		image: MC_IMG_CLOSE_PRESSED COMP;
                image: MC_IMG_PROGRESS_BG COMP;
                image: MC_IMG_PROGRESS_BAR COMP;
		//image: MC_IMG_ALBUMART_MASK COMP;
	}
	parts {
		part{ name: "bg";
			type : RECT;
			scale : 1;
			mouse_events: 0;
			description {
				state: "default" 0.0;
				min : 0 MINI_H;
				fixed: 1 1;
				rel1{ relative : 0 0;}
				rel2{ relative : 1 1;}
				color : MC_BG;
			}
		}

		part { name: "padding.top";
			type: SPACER;
			scale: 1;
			mouse_events: 0;
			description { state: "default" 0.0;
				rel1 { relative: 0 0; to: "bg"; }
				rel2 { relative: 1 0; to: "bg"; }
				min: 0 TOP_PADDING;
				fixed: 0 1;
				align: 0 0;
			}
		}

		part { name: "padding.left";
			type: SPACER;			scale: 1;
			mouse_events: 0;
			description { state: "default" 0.0;
				rel1 { relative: 0 0; to: "bg"; }
				rel2 { relative: 0 1; to: "bg"; }
				min: LEFT_PADDING 0;
				fixed: 1 0;
				align: 0 0;
			}
		}

		part { name: "padding.right";
			type: SPACER;
			scale: 1;
			mouse_events: 0;
			description { state: "default" 0.0;
				rel1 { relative: 1 0; to: "bg"; }
				rel2 { relative: 1 1; to: "bg"; }
				min: RIGHT_PADDING 0;
				fixed: 1 0;
				align: 1 0;
			}
		}

		part { name: "padding.bottom";
			type: SPACER;
			scale: 1;
			mouse_events: 0;
			description { state: "default" 0.0;
				rel1 { relative: 0 1; to: "bg"; }
				rel2 { relative: 1 1; to: "bg"; }
				min: 0 BOTTOM_PADDING;
				fixed: 0 1;
				align: 0 1;
			}
		}

		part { name: "padding_for_albumart.top";
			type: SPACER;
			scale: 1;
			description { state: "default" 0.0;
				rel2 { relative: 1.0 0.0; }
				min: 0 26;
				fixed: 0 1;
				align: 0.0 0.0;
			}
		}

                part { name: "padding_for_albumart.bottom";
			type: SPACER;
			scale: 1;
			description { state: "default" 0.0;
				rel1 { relative: 0 1; to: "bg"; }
				rel2 { relative: 1 1; to: "bg"; }
				min: 0 24;
				fixed: 0 1;
				align: 0 1;
			}
		}

		part { name: "albumarmt_bg";
			type: RECT;
			scale: 1;
			mouse_events: 0;
			description { state: "default" 0.0;
				rel1 { relative: 1.0 1.0; to_x: "padding.left"; to_y: "padding_for_albumart.top"; }
				rel2 { relative: 1.0 0.0; to_x: "padding.left"; to_y: "padding_for_albumart.bottom"; }
				min: ALBUM_ART_LD_SIZE;
				max: ALBUM_ART_LD_SIZE;
				fixed: 1 1;
				align: 0.0 0.0;
			}
		}

		part { name: "albumart_image";
			type: SWALLOW;
			scale: 1;
			mouse_events: 1;
			description { state: "default" 0.0;
				rel1 { relative: 0.5 0.5; to: "albumarmt_bg"; }
				rel2 { relative: 0.5 0.5; to: "albumarmt_bg"; }
				min: ALBUM_ART_LD_SIZE;
				max: ALBUM_ART_LD_SIZE;
				fixed: 1 1;
				align: 0.5 0.5;
			}
		}

		part { name: "mid_area";
			type: SPACER;
			scale: 1;
			mouse_events: 0;
			description { state: "default" 0.0;
				rel1 { relative: 1.0 0.0; to_x: "albumarmt_bg"; to_y: "bg"; offset: 34 0;}
				rel2 { relative: 822/1280 1.0; to_x: "bg"; to_y: "bg"; }
				align: 0.0 0.0;
			}
		}

		part { name: "elm.text";		// title
			type: SWALLOW;
			mouse_events: 0;
			scale: 1;
			description { state: "default" 0.0;
			   rel1 { relative: 0.0 0.0; to_x: "mid_area"; to_y: "bg"; offset: 0 82;}
			   rel2 { relative: 1.0 0.0; to_x: "mid_area"; to_y: "bg"; offset: 0 82;}
			   min: 620 36;
			   fixed: 1 1;
			   align: 0.0 0.0;
			}
		}

		part { name: "close_btn_left_padding";
			type: SPACER;
			scale: 1;
			mouse_events: 0;
			description { state: "default" 0.0;
				rel1 { relative: 1200/1280 1.0; to_x: "bg"; to_y: "padding.top"; }
				rel2 { relative: 0 1.0; to_x: "padding.right"; to_y: "padding.top"; }
				min: BUTTON_CLOSE_SIZE_MAX;
                                max: BUTTON_CLOSE_SIZE_MAX;
				fixed: 1 1;
				align: 0.0 0.0;
			}
		}
		MC_PART_AREA_FROM_LEFT("close_btn_area", "close_btn_left_padding", BUTTON_CLOSE_SIZE_MAX, BUTTON_CLOSE_SIZE_MAX)
		MC_PART_ICON_BTN("close_btn", "close_btn_area", MC_IMG_CLOSE_NORMAL, MC_IMG_CLOSE_PRESSED, BUTTON_CLOSE_SIZE_MAX)

		/* progress bg image */
		part {
			name: "progress_bg";
			type: IMAGE;
			mouse_events: 0;
			scale: 1;
			description {
				state: "default" 0.0;
				align: 0.5 0;
				visible:1;
				image { normal: MC_IMG_PROGRESS_BG; }
				min: 642 8;
				max: 642 8;
				fixed: 1 1;
				rel1 { relative: 0.0 1.0; to_x: "mid_area"; to_y: "elm.text"; offset: 0 12; }
				rel2 { relative: 1.0 1.0; to_x: "mid_area"; to_y: "elm.text";}
			}
		}
		/* progress */
		MC_PART_RECT("progress_area", "progress_bg", 0, 0, 1, 1)
		MC_PART_SWALLOW("progress_box", "progress_area", 0, 0, 1, 1)

		part { name: "button_area";
			type: RECT;
			scale: 1;
			description { state: "default" 0.0;
				rel1 { relative: 1 0; to_x: "mid_area"; to_y: "bg"; offset: 68 60;}
				rel2 { relative: 1 0; to_x: "mid_area"; to_y: "bg"; offset: 68 60;}
                                align: 0.5 0.0;
                                min: 0 108;
                                fixed: 0 1;
                                visible: 0;
			}
		}

		part { name: "rew_btn_area";
			type: SPACER;
			scale: 1;
			mouse_events: 0;
			description { state: "default" 0.0;
				rel1 { relative: 0.0 0.5; to: "button_area";}
				rel2 { relative: 0.0 0.5; to: "button_area";}
				min: BUTTON_SIZE_MIN_MAX;
				fixed: 1 1;
				align: 0.0 0.5;
			}
		}
		MC_PART_ICON_BTN("rew_btn", "rew_btn_area", MC_IMG_REW_NORMAL, MC_IMG_REW_PRESSED, BUTTON_SIZE_MIN_MAX)

		MC_PART_AREA_FROM_LEFT("rew_right_padding", "rew_btn_area", 21, 102)

		MC_PART_AREA_FROM_LEFT("play_pause_btn_area", "rew_right_padding", 102, 102)
		MC_PART_ICON_BTN("play_btn", "play_pause_btn_area", MC_IMG_PLAY_NORMAL, MC_IMG_PLAY_PRESSED, BIG_BTN_SIZE_MIN_MAX)
		MC_PART_ICON_BTN("pause_btn", "play_pause_btn_area", MC_IMG_PAUSE_NORMAL, MC_IMG_PAUSE_PRESSED, BIG_BTN_SIZE_MIN_MAX)

		MC_PART_AREA_FROM_LEFT("play_pause_right_padding", "play_pause_btn_area", 21, 86)

		MC_PART_AREA_FROM_LEFT("ff_btn_area", "play_pause_right_padding", 80, 80)
		MC_PART_ICON_BTN("ff_btn", "ff_btn_area", MC_IMG_FF_NORMAL, MC_IMG_FF_PRESSED, BUTTON_SIZE_MIN_MAX)

	}

	programs {
		MC_PROGRAM_BTN_ACTION("rew_btn", "rew_btn_down", "edje", "rew_btn_up", "edje", "rew_btn_clicked", "edje")

		MC_PROGRAM_BTN_ACTION("play_btn", "play_btn_down", "edje", "play_btn_up", "edje", "play_btn_clicked", "edje")
		MC_PROGRAM_BTN_VISIBLE("play_btn", "show_play_btn", "hide_play_btn")

		MC_PROGRAM_BTN_ACTION("pause_btn", "pause_btn_down", "edje", "pause_btn_up", "edje", "pause_btn_clicked", "edje")
		MC_PROGRAM_BTN_VISIBLE("pause_btn", "show_pause_btn", "hide_pause_btn")

		MC_PROGRAM_BTN_ACTION("ff_btn", "ff_btn_down", "edje", "ff_btn_up", "edje", "rew_btn_clicked", "edje")

		MC_PROGRAM_BTN_ACTION("close_btn", "close_btn_down", "edje", "close_btn_up", "edje", "close_btn_clicked", "edje")

		program { name: "albumart_cb";
		   signal: "mouse,clicked,1";
		   source: "albumart_image";
			script{
			   emit("albumart_clicked", "edje");
		   }
		}
		program{
			name: "albumart_cb_after_down";
			source: "albumart_image";
			signal: "mouse,down,1";
			transition: ACCELERATE 0.02;
		}
		program {
			name: "albumart_cb_down";
			source: "albumart_image";
			signal: "mouse,down,1";
			action: RUN_PLUGIN "touch_sound_plugin";
			after:	"albumart_cb_after_down";
			transition: ACCELERATE 0.02;
		}
		program { name: "set_pause_icon";
		   signal: "set_pause";
		   source: "*";
		   script{
				emit("hide_play_btn", "edje");
				emit("show_pause_btn", "edje");
		   }
		}
		program { name: "set_play_icon";
		   signal: "set_play";
		   source: "*";
		   script{
				emit("show_play_btn", "edje");
				emit("hide_pause_btn", "edje");
		   }
		}

	}

}


group {
	name: "minicontroller_progress_box";
	parts {
		part { name: "bg";
			type : RECT;
			scale: 1;
			mouse_events: 1;
			description { state: "default" 0.0;
				visible: 1;
				rel1 { relative: 0.0 0.0; }
				rel2 { relative: 1.0 1.0; }
				color : 0 0 0 0;
			}
		}

		MC_PART_RECT("progress_bar_area", "bg", 0, 0, 1, 1)

		part {
			name: "progress_bar";
			mouse_events: 1;
			type: SWALLOW;
			scale: 1;
			description {
				state: "default" 0.0;
				align: 0.5 0.5;
				visible: 1;
				fixed: 1 1;
				rel1 {
					relative: 0 0;
					to: "progress_bar_area";
				}
				rel2 {
					relative: 1 1;
					to: "progress_bar_area";
				}
				color: 248 246 239 255;
			}
			description {
				state: "hide" 0.0;
				visible: 0;
			}
		}
        }
}

// prgress
#define MC_PLAYER_PROGRESSBAR_H	8
#define MC_PLAYER_CIRCLE_W 50
#define MC_PLAYER_CIRCLE_H 50


group { name: "mc_player_progressbar";

	images {
		image: MC_IMG_PROGRESS_BG COMP;
		image: MC_IMG_PROGRESS_BAR COMP;
	}

	parts {
		part { name: "bg";
			type: RECT;
			mouse_events: 1;
			scale: 1;
			description {
				color: 0 0 0 0;
			}
		}
		part { name: "progressbar_bg";
			type: IMAGE;
			mouse_events: 0;
			scale: 1;
			description {
				state: "default" 0.0;
				rel1 { relative: 0.0 0.5; to: "bg";}
				rel2 { relative: 1.0 0.5; to: "bg";}
				image { normal: MC_IMG_PROGRESS_BG; border: 5 5 0 0; }
				min: 0 MC_PLAYER_PROGRESSBAR_H;
				fixed: 0 1;
				align: 0.5 0.5;
			}
		}

		part { name: "progressbar_current";
			type: IMAGE;
			mouse_events: 0;
			scale: 1;
			description {
				state: "default" 0.0;
				rel1 { relative: 0.0 0.5; to: "progressbar_bg"; }
				rel2 { relative: 0.5 0.5; to_x: "progressbar_playing"; to_y: "progressbar_bg"; }
				image { normal: MC_IMG_PROGRESS_BAR; border: 5 5 0 0; }
				min: 0 MC_PLAYER_PROGRESSBAR_H;
				fixed: 0 1;
				align: 0.5 0.5;
			}
		}

		part { name: "progressbar_playing_confine_rect";
			type: RECT;
			mouse_events: 0;
			scale: 1;
			description { state: "default" 0.0;
				visible: 0;
				rel1 { relative: 0.0 0.5; offset: (-MC_PLAYER_CIRCLE_W/2) 0; to: "progressbar_bg"; }
				rel2 { relative: 1.0 0.5; offset: (MC_PLAYER_CIRCLE_W/2) 0; to: "progressbar_bg"; }
				min: 0 MC_PLAYER_CIRCLE_H;
				fixed: 0 1;
				align: 0.5 0.5;
			}
		}

		part { name: "progressbar_playing";
			type: RECT;
			mouse_events: 0;
			scale: 1;
			description { state: "default" 0.0;
				min: MC_PLAYER_CIRCLE_W MC_PLAYER_CIRCLE_H;
				fixed: 1 1;
                                visible: 0;
			}
			dragable {
				confine: "progressbar_playing_confine_rect";
				x: 1 1 1;
			}
		}
	}
}
} // collection
