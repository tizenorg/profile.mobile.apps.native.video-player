/*
* Copyright (c) 2000-2015 Samsung Electronics Co., Ltd All Rights Reserved
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
* http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*
*/

///////////////////////////////////////////////////////////////////////////////////////
//
// ctxpopup
//
///////////////////////////////////////////////////////////////////////////////////////
#define CTXPOPUP_BUBBLE_BG_IMAGE_BORDER 3 3 3 3 /* modify */
#define CTXPOPUP_BUBBLE_MASK_IMAGE_BORDER 13 13 13 13 /* modify */
#define CTXPOPUP_SHADOW_LEFT_PADDING 0
#define CTXPOPUP_SHADOW_RIGHT_PADDING 0
#define CTXPOPUP_SHADOW_TOP_PADDING 0
#define CTXPOPUP_SHADOW_BOTTOM_PADDING 0
#define CTXPOPUP_CONTENT_PADDING 0
#define CTXPOPUP_SCROLLER_PADDING 8
#define CTXPOPUP_SCROLLER_MIN_SIZE_INC 9 12
#define CTXPOPUP_FRAME_CORNER_ARROW_PADDING 4 /* modify */
#define CTXPOPUP_BG_COLOR_INC 22 27 30 165 /* modify */
#define CTXPOPUP_BG_PRESS_COLOR_INC 42 137 194 255

#define CTXPOPUP_LIST_MAIN_TEXT_COLOR_INC 255 255 255 255
#define CTXPOPUP_LIST_MAIN_TEXT_DIM_COLOR_INC 255 255 255 178
#define CTXPOPUP_LIST_MAIN_TEXT_PRESS_COLOR_INC 255 255 255 255
#define CTXPOPUP_SEPARATOR_PXLINE_SIZE_INC 1
#define CTXPOPUP_SEPARATOR_PADDING_INC 3 /* modify */
#define CTXPOPUP_SEPARATOR_COLOR_INC 200 200 200 255 /* modify */
#define CTXPOPUP_SEPARATOR2_COLOR_INC 200 200 200 255
#define CTXPOPUP_HORIZONTAL_SEPARATOR_1_COLOR_INC 45 45 45 255
#define CTXPOPUP_HORIZONTAL_SEPARATOR_2_COLOR_INC 91 91 91 255
#define CTXPOPUP_HORIZONTAL_SEPARATOR_MIN_SIZE_INC 1 74
#define CTXPOPUP_HORIZONTAL_SEPARATOR_MAX_SIZE_INC 1 74
#define CTXPOPUP_ITEM_DISABLED_COLOR 0 0 0 100
#define CTXPOPUP_LIST_MAIN_TEXT_SIZE_INC 33 /* modify */
#define CTXPOPUP_ITEM_HEIGHT_MIN_INC 112
#define CTXPOPUP_ITEM_HEIGHT_MAX_INC 130
#define CTXPOPUP_ICON_ITEM_HORIZONTAL_WIDTH_INC 112
#define CTXPOPUP_ITEM_HORIZONTAL_HEIGHT_INC 96
#define CTXPOPUP_ICON_WIDTH_INC 64
#define CTXPOPUP_ICON_HEIGHT_INC 64
#define CTXPOPUP_ICON_HORIZONTAL_WIDTH_INC 48
#define CTXPOPUP_ICON_HORIZONTAL_HEIGHT_INC 48
#define CTXPOPUP_ARROW_SIZE_INC 48 48
#define CTXPOPUP_VERTICAL_ARROW_SIZE_INC 40 24 /* modify */
#define CTXPOPUP_HORIZONTAL_ARROW_SIZE_INC 30 40
#define CTXPOPUP_ITEM_TEXT_PADDING_INC 35
#define CTXPOPUP_ITEM_ICON_PADDING_INC 35

///////////////////////////////////////////////////////////////////////////////////////
//
// ctxpopup
//
///////////////////////////////////////////////////////////////////////////////////////

#define CTXPOPUP_SHADOW_PADDING 10
#define CTXPOPUP_FRAME_CORNER_SIZE 4 4
#define CTXPOPUP_FONT_COLOR 0 0 0 255
#define CTXPOPUP_CLICKED_FONT_COLOR 255 255 255 255
#define CTXPOPUP_LIST_PADDING 10
#define CTXPOPUP_LIST_SHADOW_PADDING 3


///////////////////////////////////////////////////////////////////////////////
	group {
		name: "elm/scroller/base/video/ctxpopup";
		script {
			public sbvis_v, sbvis_h, sbalways_v, sbalways_h, sbvis_timer;
			public timer0(val) {
				new v;
			v = get_int(sbvis_v);
			if (v) {
				v = get_int(sbalways_v);
				if(!v) {
					emit("do-hide-vbar", "");
					set_int(sbvis_v, 0);
				}
			}
			v = get_int(sbvis_h);
			if (v) {
				v = get_int(sbalways_h);
				if(!v) {
					emit("do-hide-hbar", "");
					set_int(sbvis_h, 0);
				}
			}
			set_int(sbvis_timer, 0);
			return 0;
			}
		}
		images {
			image: "white/common/00_popup_scroll.9.png" COMP;
			image: "white/common/01_scroller.png" COMP;
		}
		parts {
			part {
				name: "clipper";
				type: RECT;
				mouse_events: 0;
				scale: 1;
				description {
					state: "default" 0.0;
				}
			}
			part {
				name: "elm.swallow.content";
				clip_to: "clipper";
				type: SWALLOW;
				scale: 1;
				description {
					state: "default" 0.0;
					align: 0.5 0.5;
				}
			}
			part {
				name: "sb_vbar_clip_master";
				type: RECT;
				mouse_events: 0;
				description {
					state: "default" 0.0;
				}
				description {
					state: "hidden" 0.0;
					visible: 0;
					color: 255 255 255 0;
				}
			}
			part {
				name: "sb_vbar_clip";
				clip_to:"sb_vbar_clip_master";
				type: RECT;
				mouse_events: 0;
				scale: 1;
				description {
					state: "default" 0.0;
					align: 0.0 0.0;
					rel2{ to:"clipper"; relative: 1.0 1.0;}
				}
				description {
					state: "hidden" 0.0;
					visible: 0;
					color: 255 255 255 0;
				}
			}
			part {
				name: "sb_vbar_padding";
				type: RECT;
				mouse_events: 0;
				scale: 1;
				description {
					state: "default" 0.0;
					fixed: 1 1;
					min: (CTXPOPUP_SCROLLER_PADDING-CTXPOPUP_CONTENT_PADDING) 0;
					max: (CTXPOPUP_SCROLLER_PADDING-CTXPOPUP_CONTENT_PADDING) 0;
					visible: 0;
					align: 1.0 0.0;
					rel1 { to:"clipper"; relative: 1.0 0.0; }
					rel2 { to:"clipper"; relative: 1.0 1.0; }
				}
			}
			part {
				name: "sb_vbar";
				type: RECT;
				mouse_events: 0;
				scale: 1;
				description {
					state: "default" 0.0;
					fixed: 1 1;
					visible: 0;
					align: 1.0 0.0;
					rel1 { to_x:"sb_vbar_padding"; to_y:"clipper"; relative: 0.0 0.0; }
					rel2 { to_x:"sb_vbar_padding"; to_y:"clipper"; relative: 0.0 1.0; }
				}
			}
			part {
				name: "elm.dragable.vbar";
				clip_to: "sb_vbar_clip";
				mouse_events: 0;
				scale: 1;
				dragable {
					x: 0 0 0;
					y: 1 1 0;
					confine: "sb_vbar";
				}
				description {
					state: "default" 0.0;
					fixed: 1 1;
					min: CTXPOPUP_SCROLLER_MIN_SIZE_INC;
					rel1 {
						relative: 0.5  0.5;
						to: "sb_vbar";
					}
					rel2 {
						relative: 0.5  0.5;
						to: "sb_vbar";
					}
					image {
						normal: "white/common/00_popup_scroll.9.png";
						border: 0 0 5 5;
						border_scale: 1;
					}
				}
			}
			part {
				name: "sb_hbar_clip_master";
				type: RECT;
				mouse_events: 0;
				description {
					state: "default" 0.0;
				}
				description {
					state: "hidden" 0.0;
					visible: 0;
					color: 255 255 255 0;
				}
			}
			part {
				name: "sb_hbar_clip";
				clip_to: "sb_hbar_clip_master";
				type: RECT;
				mouse_events: 0;
				scale: 1;
				description {
					state: "default" 0.0;
					align: 0.0 0.0;
					rel2{ to:"clipper"; relative: 1.0 1.0;}
				}
				description {
					state: "hidden" 0.0;
					visible: 0;
					color: 255 255 255 0;
				}
			}
			part {
				name: "sb_hbar";
				type: RECT;
				mouse_events: 0;
				scale: 1;
				description {
					state: "default" 0.0;
					fixed: 1 1;
					visible: 0;
					align: 0.0 1.0;
					rel1 {to:"clipper"; relative: 0.0 1.0;}
					rel2 {to:"clipper"; relative: 1.0 1.0;}
				}
			}
			part {
				name: "elm.dragable.hbar";
				clip_to: "sb_hbar_clip";
				mouse_events: 0;
				scale: 1;
				dragable {
					x: 1 1 0;
					y: 0 0 0;
					confine: "sb_hbar";
				}
				description {
					state: "default" 0.0;
					fixed: 1 1;
					min: 32 12;
					rel1 {relative: 0.5  0.5; to: "sb_hbar";}
					rel2 {relative: 0.5  0.5; to: "sb_hbar";}
					image {
						normal: "white/common/01_scroller.png";
						border: 6 6 0 0;
						border_scale: 1;
					}
				}
			}
		}
		programs {
			program {
				name: "load";
				signal: "load";
				source: "";
				script {
					set_state(PART:"sb_vbar_clip", "hidden", 0.0);
					set_state(PART:"sb_hbar_clip", "hidden", 0.0);
					set_int(sbvis_v, 0);
					set_int(sbvis_h, 0);
					set_int(sbalways_v, 0);
					set_int(sbalways_h, 0);
					set_int(sbvis_timer, 0);
				}
			}
			program {
				name: "vbar_show";
				signal: "elm,action,show,vbar";
				source: "elm";
				action: STATE_SET "default" 0.0;
				target: "sb_vbar_clip_master";
			}
			program {
				name: "vbar_hide";
				signal: "elm,action,hide,vbar";
				source: "elm";
				action:  STATE_SET "hidden" 0.0;
				target: "sb_vbar_clip_master";
			}
			program {
				name: "vbar_show_always";
				signal: "elm,action,show_always,vbar";
				source: "elm";
				script {
					new v;
					v = get_int(sbvis_v);
					v |= get_int(sbalways_v);
					if (!v) {
						set_int(sbalways_v, 1);
						emit("do-show-vbar", "");
						set_int(sbvis_v, 1);
					}
				}
			}
			program {
				name: "vbar_show_notalways";
				signal: "elm,action,show_notalways,vbar";
				source: "elm";
				script {
					new v;
					v = get_int(sbalways_v);
					if (v) {
						set_int(sbalways_v, 0);
						v = get_int(sbvis_v);
						if (!v) {
							emit("do-hide-vbar", "");
						set_int(sbvis_v, 0);
						}
					}
				}
			}
			program {
				name: "sb_vbar_show";
				signal: "do-show-vbar";
				source: "";
				action:  STATE_SET "default" 0.0;
				transition: LINEAR 1.0;
				target: "sb_vbar_clip";
			}
			program {
				name: "sb_vbar_hide";
				signal: "do-hide-vbar";
				source: "";
				action:  STATE_SET "hidden" 0.0;
				transition: LINEAR 1.0;
				target: "sb_vbar_clip";
			}
			program {
				name: "hbar_show";
				signal: "elm,action,show,hbar";
				source: "elm";
				action:  STATE_SET "default" 0.0;
				target: "sb_hbar_clip_master";
			}
			program {
				name: "hbar_hide";
				signal: "elm,action,hide,hbar";
				source: "elm";
				action:  STATE_SET "hidden" 0.0;
				target: "sb_hbar_clip_master";
			}
			program {
				name: "hbar_show_always";
				signal: "elm,action,show_always,hbar";
				source: "elm";
				script {
					new v;
					v = get_int(sbvis_h);
					v |= get_int(sbalways_h);
					if (!v) {
						set_int(sbalways_h, 1);
						emit("do-show-hbar", "");
						set_int(sbvis_h, 1);
					}
				}
			}
			program {
				name: "hbar_show_notalways";
				signal: "elm,action,show_notalways,hbar";
				source: "elm";
				script {
					new v;
					v = get_int(sbalways_h);
					if (v) {
						set_int(sbalways_h, 0);
						v = get_int(sbvis_h);
						if (!v) {
							emit("do-hide-hbar", "");
							set_int(sbvis_h, 0);
						}
					}
				}
			}
			program {
				name: "sb_hbar_show";
				signal: "do-show-hbar";
				source: "";
				action:  STATE_SET "default" 0.0;
				transition: LINEAR 1.0;
				target: "sb_hbar_clip";
			}
			program {
				name: "sb_hbar_hide";
				signal: "do-hide-hbar";
				source: "";
				action:  STATE_SET "hidden" 0.0;
				transition: LINEAR 1.0;
				target: "sb_hbar_clip";
			}
			program {
				name: "scroll";
				signal: "elm,action,scroll";
				source: "elm";
				action:  STATE_SET "default" 0.0;
				script {
					new v;
					v = get_int(sbvis_v);
					v |= get_int(sbalways_v);
					if (!v) {
						emit("do-show-vbar", "");
						set_int(sbvis_v, 1);
					}
					v = get_int(sbvis_h);
					v |= get_int(sbalways_h);
					if(!v) {
						emit("do-show-hbar", "");
						set_int(sbvis_h, 1);
					}
					v = get_int(sbvis_timer);
					if (v > 0) cancel_timer(v);
					v = timer(2.0, "timer0", 0);
					set_int(sbvis_timer, v);
				}
			}
		}
	}
///////////////////////////////////////////////////////////////////////////////
	group {
		name: "elm/ctxpopup/bg/video/pass_event";
		alias: "elm/ctxpopup/bg/video/extended/entry/pass_event";
		alias: "elm/ctxpopup/bg/video/extended/entry";
		alias: "elm/ctxpopup/bg/video/timepicker";
		alias: "elm/ctxpopup/bg/video/datetime/default";
		parts {
			part {
				name: "bg";
				type: RECT;
				repeat_events: 1;
				description {
					state: "default" 0.0;
					visible: 0;
				}
				description {
					state: "visible" 0.0;
					color: 0 0 0 0;
					visible: 1;
				}
			}
		}
		programs {
			program {
				name:	"clicked_event";
				signal: "mouse,clicked,1";
				source: "bg";
				action: SIGNAL_EMIT "elm,action,click" "";
			}
			program {
				name: "show";
				signal: "elm,state,show";
				source: "elm";
				action: STATE_SET "visible" 0.0;
				target: "bg";
			}
			program {
				name: "hide";
				signal: "elm,state,hide";
				source: "elm";
				action: STATE_SET "default" 0.0;
				target: "bg";
			}
		}
	}
///////////////////////////////////////////////////////////////////////////////
	group {
		name: "elm/ctxpopup/bg/video/default";
		parts {
			part {
				name: "bg";
				type: RECT;
				mouse_events: 1;
				description {
					state: "default" 0.0;
					visible: 0;
				}
				description {
					state: "visible" 0.0;
					color: 0 0 0 0;
					visible: 1;
				}
			}
		}
		programs {
			program {
				name:	"clicked_event";
				signal: "mouse,clicked,1";
				source: "bg";
				action: SIGNAL_EMIT "elm,action,click" "";
			}
			program {
				name: "show";
				signal: "elm,state,show";
				source: "elm";
				action: STATE_SET "visible" 0.0;
				target: "bg";
			}
			program {
				name: "hide";
				signal: "elm,state,hide";
				source: "elm";
				action: STATE_SET "default" 0.0;
				target: "bg";
			}
		}
	}

///////////////////////////////////////////////////////////////////////////////

	group {
		name: "elm/ctxpopup/base/video/default";
		images {
			image: "white/common/00_popup_bubble_bg.png" COMP;
			image: "white/common/T01-2_popup_bg.png" COMP;
		}
		parts {
			part {
				name:"frame_shadow_left_top_padding";
				type:RECT;
				scale: 1;
				mouse_events: 0;
				description {
					state: "default" 0.0;
					min: CTXPOPUP_SHADOW_LEFT_PADDING 0;
					max: CTXPOPUP_SHADOW_LEFT_PADDING 0;
					rel2 { relative: 0 0; }
					align: 1 1;
					fixed: 1 1;
					visible: 0;
				}
			}
			part {
				name:"frame_shadow_right_bottom_padding";
				type:RECT;
				scale: 1;
				mouse_events: 0;
				description {
					state: "default" 0.0;
					min: CTXPOPUP_SHADOW_RIGHT_PADDING CTXPOPUP_SHADOW_BOTTOM_PADDING;
					max: CTXPOPUP_SHADOW_RIGHT_PADDING CTXPOPUP_SHADOW_BOTTOM_PADDING;
					rel1{relative: 1 1;}
					align: 0 0;
					fixed: 1 1;
					visible: 0;
				}
			}
			part {
				name: "frame_bg";
				type: IMAGE;
				scale: 1;
				mouse_events: 0;
				clip_to: "ctxpopup_clip";
				description {
					state: "default" 0.0;
					rel1 {to:"frame_shadow_left_top_padding";}
					rel2 {to:"frame_shadow_right_bottom_padding";}
					min: (CTXPOPUP_ICON_ITEM_HORIZONTAL_WIDTH_INC + CTXPOPUP_SHADOW_LEFT_PADDING + CTXPOPUP_SHADOW_RIGHT_PADDING) 0;
					image {
						normal: "white/common/T01-2_popup_bg.png";
						border: CTXPOPUP_BUBBLE_BG_IMAGE_BORDER;
						border_scale: 1;
					}
				}
			}
			part { name: "arrow_area_left";
				type: RECT;
				mouse_events: 0;
				scale: 1;
				clip_to: "ctxpopup_clip";
				description { state: "default" 0.0;
					visible: 0;
					min: CTXPOPUP_HORIZONTAL_ARROW_SIZE_INC;
					fixed: 1 1;
					align: 1 0.5;
					rel1 {
						relative: 1 1;
						to_x:"content_left_top_padding";
						to_y: "ctxpopup_frame_left_top";
					}
					rel2 {
						relative: 1 0;
						to_x:"content_left_top_padding";
						to_y:"ctxpopup_frame_right_bottom";
					}
				}
			}
			part { name: "arrow_area_right";
				type: RECT;
				mouse_events: 0;
				scale: 1;
				clip_to: "ctxpopup_clip";
				description { state: "default" 0.0;
					visible: 0;
					min: CTXPOPUP_HORIZONTAL_ARROW_SIZE_INC;
					fixed: 1 1;
					align: 0 0.5;
					rel1 {
						relative: 0 1;
						to_x:"content_right_bottom_padding";
						to_y:"ctxpopup_frame_left_top";
					}
					rel2 {
						relative: 0 0;
						to_x:"content_right_bottom_padding";
						to_y: "ctxpopup_frame_right_bottom";
					}
				}
			}
			part { name: "arrow_area_up";
				type: RECT;
				mouse_events: 0;
				scale: 1;
				clip_to: "ctxpopup_clip";
				description { state: "default" 0.0;
					visible: 0;
					min: CTXPOPUP_VERTICAL_ARROW_SIZE_INC;
					fixed: 1 1;
					align: 0.5 1;
					rel1 {
						relative: 1 1;
						to_x: "ctxpopup_frame_left_top";
						to_y: "content_left_top_padding";
					}
					rel2 {
						relative: 0 1;
						to_x:"ctxpopup_frame_right_bottom";
						to_y: "content_left_top_padding";
					}
				}
			}
			part { name: "arrow_area_down";
				type: RECT;
				mouse_events: 0;
				scale: 1;
				clip_to: "ctxpopup_clip";
				description { state: "default" 0.0;
					visible: 0;
					min: CTXPOPUP_VERTICAL_ARROW_SIZE_INC;
					fixed: 1 1;
					align: 0.5 0;
					rel1 {
						relative: 1 0;
						to_x:"ctxpopup_frame_left_top";
						to_y:"content_right_bottom_padding";
					}
					rel2 {
						relative: 0 0;
						to_x: "ctxpopup_frame_right_bottom";
						to_y:"content_right_bottom_padding";
					}
				}
			}
			part { name: "elm.swallow.arrow_up";
				type: SWALLOW;
				mouse_events: 0;
				scale: 1;
				clip_to: "ctxpopup_clip";
				dragable {
					x: 1 1 0;
					y: 1 1 0;
					confine: "arrow_area_up";
				}
				description {
					state: "default" 0.0;
					min: CTXPOPUP_VERTICAL_ARROW_SIZE_INC;
					fixed: 1 1;
					visible: 0;
				}
			}
			part { name: "elm.swallow.arrow_down";
				type: SWALLOW;
				mouse_events: 0;
				scale: 1;
				clip_to: "ctxpopup_clip";
				dragable {
					x: 1 1 0;
					y: 1 1 0;
					confine: "arrow_area_down";
				}
				description {
					state: "default" 0.0;
					min: CTXPOPUP_VERTICAL_ARROW_SIZE_INC;
					fixed: 1 1;
					visible: 0;
				}
			}
			part { name: "elm.swallow.arrow_left";
				type: SWALLOW;
				mouse_events: 0;
				scale: 1;
				clip_to: "ctxpopup_clip";
				dragable {
					x: 1 1 0;
					y: 1 1 0;
					confine: "arrow_area_left";
				}
				description {
					state: "default" 0.0;
					min: CTXPOPUP_HORIZONTAL_ARROW_SIZE_INC;
					fixed: 1 1;
					visible: 0;
				}
			}
			part { name: "elm.swallow.arrow_right";
				type: SWALLOW;
				mouse_events: 0;
				scale: 1;
				clip_to: "ctxpopup_clip";
				dragable {
					x: 1 1 0;
					y: 1 1 0;
					confine: "arrow_area_right";
				}
				description {
					state: "default" 0.0;
					min: CTXPOPUP_HORIZONTAL_ARROW_SIZE_INC;
					fixed: 1 1;
					visible: 0;
				}
			}
			part {
				name: "ctxpopup_frame_left_top";
				type: RECT;
				scale: 1;
				description {
					state: "default" 0.0;
					visible: 0;
					align: 0 0;
					fixed: 1 1;
					min: CTXPOPUP_FRAME_CORNER_ARROW_PADDING CTXPOPUP_FRAME_CORNER_ARROW_PADDING;
					max: CTXPOPUP_FRAME_CORNER_ARROW_PADDING CTXPOPUP_FRAME_CORNER_ARROW_PADDING;
					rel1 {relative: 0 0; to: "content_left_top_padding";}
				}
			}
			part {
				name: "ctxpopup_frame_right_bottom";
				type: RECT;
				scale: 1;
				description {
					state: "default" 0.0;
					visible: 0;
					align: 1 1;
					fixed: 1 1;
					min: CTXPOPUP_FRAME_CORNER_ARROW_PADDING CTXPOPUP_FRAME_CORNER_ARROW_PADDING;
					max: CTXPOPUP_FRAME_CORNER_ARROW_PADDING CTXPOPUP_FRAME_CORNER_ARROW_PADDING;
					rel2 {relative: 1 1; to: "content_right_bottom_padding";}
				}
			}
			part {
				name:"content_left_top_padding";
				type:RECT;
				scale: 1;
				mouse_events: 0;
				description {
					state: "default" 0.0;
					min: CTXPOPUP_CONTENT_PADDING CTXPOPUP_CONTENT_PADDING;
					max: CTXPOPUP_CONTENT_PADDING CTXPOPUP_CONTENT_PADDING;
					rel1 {to:"frame_shadow_left_top_padding";  relative: 1.0 1.0;}
					align: 0 0;
					fixed: 1 1;
					visible: 0;
				}
			}
			part {
				name:"content_right_bottom_padding";
				type:RECT;
				scale: 1;
				mouse_events: 0;
				description {
					state: "default" 0.0;
					min: CTXPOPUP_CONTENT_PADDING CTXPOPUP_CONTENT_PADDING;
					max: CTXPOPUP_CONTENT_PADDING CTXPOPUP_CONTENT_PADDING;
					rel2 {to:"frame_shadow_right_bottom_padding";  relative: 0.0 0.0;}
					align: 1 1;
					fixed: 1 1;
					visible: 0;
				}
			}
			part {
				name: "elm.swallow.content";
				type: SWALLOW;
				clip_to: "ctxpopup_clip";
				description {
					state: "default" 0.0;
					align: 0 0;
					rel1 {to:"content_left_top_padding";  relative: 1.0 1.0;}
					rel2 {to:"content_right_bottom_padding";  relative: 0.0 0.0;}
				}
			}
			part {
				name: "mask";
				type: IMAGE;
				scale: 1;
				mouse_events: 0;
				clip_to: "ctxpopup_clip";
				description {
					state: "default" 0.0;
					visible : 0;
					rel1 {to:"elm.swallow.content";}
					rel2 {to:"elm.swallow.content";}
					image {
						normal: "white/common/00_popup_bubble_bg.png";
						border: CTXPOPUP_BUBBLE_MASK_IMAGE_BORDER;
						border_scale: 1;
					}
				}
			}
			part { name: "ctxpopup_clip";
				type: RECT;
				description { state: "default" 0.0;
				color: 255 255 255 0;
				rel1 { to:"ctxpopup_frame_left_top"; relative: 0.5 0.5; }
				rel2 { to:"ctxpopup_frame_right_bottom"; relative: 0.5 0.5; }
				}
				description { state: "show_up" 0.0;
					color: 255 255 255 0;
					rel1 { to:"elm.swallow.arrow_down"; relative: 0.5 0.5; }
					rel2 { to:"elm.swallow.arrow_down"; relative: 0.5 0.5; }
				}
				description { state: "show_left" 0.0;
					color: 255 255 255 0;
					rel1 { to:"elm.swallow.arrow_right"; relative: 0.5 0.5; }
					rel2 { to:"elm.swallow.arrow_right"; relative: 0.5 0.5; }
				}
				description { state: "show_right" 0.0;
					color: 255 255 255 0;
					rel1 { to:"elm.swallow.arrow_left"; relative: 0.5 0.5; }
					rel2 { to:"elm.swallow.arrow_left"; relative: 0.5 0.5; }
				}
				description { state: "show_down" 0.0;
					color: 255 255 255 0;
					rel1 { to:"elm.swallow.arrow_up"; relative: 0.5 0.5; }
					rel2 { to:"elm.swallow.arrow_up"; relative: 0.5 0.5; }
				}
				description { state: "hide_up" 0.0;
					color: 255 255 255 0;
					rel1 { to:"elm.swallow.arrow_down"; relative: 0.5 0.5; }
					rel2 { to:"elm.swallow.arrow_down"; relative: 0.5 0.5; }
				}
				description { state: "hide_left" 0.0;
					color: 255 255 255 0;
					rel1 { to:"elm.swallow.arrow_right"; relative: 0.5 0.5; }
					rel2 { to:"elm.swallow.arrow_right"; relative: 0.5 0.5; }
				}
				description { state: "hide_right" 0.0;
					color: 255 255 255 0;
					rel1 { to:"elm.swallow.arrow_left"; relative: 0.5 0.5; }
					rel2 { to:"elm.swallow.arrow_left"; relative: 0.5 0.5; }
				}
				description { state: "hide_down" 0.0;
					color: 255 255 255 0;
					rel1 { to:"elm.swallow.arrow_up"; relative: 0.5 0.5; }
					rel2 { to:"elm.swallow.arrow_up"; relative: 0.5 0.5; }
				}
				description { state: "visible" 0.0;
					color: 255 255 255 255;
					rel1 { to_x:"arrow_area_left"; to_y:"arrow_area_up"; }
					rel2 { to_x:"arrow_area_right"; to_y:"arrow_area_down"; }
				}
			}
		}
		programs {
			program { name: "show";
				signal: "elm,state,show";
				source: "elm";
				action: STATE_SET "visible" 0.0;
				transition: SIN_FAC 0.33 0.6;
				target: "ctxpopup_clip";
			}
			program { name: "show_up";
				signal: "elm,state,show,up";
				source: "elm";
				action: STATE_SET "show_up" 0.0;
				transition: SIN_FAC 0.33 0.6;
				target: "ctxpopup_clip";
			}
			program { name: "show_left";
				signal: "elm,state,show,left";
				source: "elm";
				action: STATE_SET "show_left" 0.0;
				transition: SIN_FAC 0.33 0.6;
				target: "ctxpopup_clip";
			}
			program { name: "show_right";
				signal: "elm,state,show,right";
				source: "elm";
				action: STATE_SET "show_right" 0.0;
				transition: SIN_FAC 0.33 0.6;
				target: "ctxpopup_clip";
			}
			program { name: "show_down";
				signal: "elm,state,show,down";
				source: "elm";
				action: STATE_SET "show_down" 0.0;
				transition: SIN_FAC 0.33 0.6;
				target: "ctxpopup_clip";
			}
			program { name: "hide_up";
				signal: "elm,state,hide,up";
				source: "elm";
				action: STATE_SET "hide_up" 0.0;
				transition: SIN_FAC 0.33 0.6;
				target: "ctxpopup_clip";
				after: "hide_finished";
			}
			program { name: "hide_left";
				signal: "elm,state,hide,left";
				source: "elm";
				action: STATE_SET "hide_left" 0.0;
				transition: SIN_FAC 0.33 0.6;
				target: "ctxpopup_clip";
				after: "hide_finished";
			}
			program { name: "hide_right";
				signal: "elm,state,hide,right";
				source: "elm";
				action: STATE_SET "hide_right" 0.0;
				transition: SIN_FAC 0.33 0.6;
				target: "ctxpopup_clip";
				after: "hide_finished";
			}
			program { name: "hide_down";
				signal: "elm,state,hide,down";
				source: "elm";
				action: STATE_SET "hide_down" 0.0;
				transition: SIN_FAC 0.33 0.6;
				target: "ctxpopup_clip";
				after: "hide_finished";
			}
			program { name: "hide_finished";
				action: SIGNAL_EMIT "elm,action,hide,finished" "";
			}
		}
	}

///////////////////////////////////////////////////////////////////////////////
	group { name: "elm/ctxpopup/arrow/video/default";
		images {
			image: "white/common/00_popup_tail_left.png" COMP;
			image: "white/common/00_popup_tail_right.png" COMP;
			image: "white/common/00_popup_tail_top.png" COMP;
			image: "white/common/00_popup_tail_bottom.png" COMP;
			image: "white/common/T01-2_popup_arrow.png" COMP;
		}
		parts {
			part {
				name: "ctxpopup_arrow";
				type: IMAGE;
				scale: 1;
				description {
					state: "default" 0.0;
					min: CTXPOPUP_ARROW_SIZE_INC;
					max: CTXPOPUP_ARROW_SIZE_INC;
					fixed: 1 1;
					visible: 0;
					align: 0.5 0.5;
				}
				description {
					state: "left" 0.0;
					min: CTXPOPUP_HORIZONTAL_ARROW_SIZE_INC;
					max: CTXPOPUP_HORIZONTAL_ARROW_SIZE_INC;
					fixed: 1 1;
					align: 1.0 0.5;
					image {
						normal: "white/common/00_popup_tail_left.png";
					}
				}
				description {
					state: "right" 0.0;
					min: CTXPOPUP_HORIZONTAL_ARROW_SIZE_INC;
					max: CTXPOPUP_HORIZONTAL_ARROW_SIZE_INC;
					fixed: 1 1;
					align: 0.0 0.5;
					image {
						normal: "white/common/00_popup_tail_right.png";
					}
				}
				description {
					state: "top" 0.0;
					min: CTXPOPUP_VERTICAL_ARROW_SIZE_INC;
					max: CTXPOPUP_VERTICAL_ARROW_SIZE_INC;
					fixed: 1 1;
					align: 0.5 1.0;
					image {
						normal: "white/common/T01-2_popup_arrow.png";
					}
				}
				description {
					state: "bottom" 0.0;
					min: CTXPOPUP_VERTICAL_ARROW_SIZE_INC;
					max: CTXPOPUP_VERTICAL_ARROW_SIZE_INC;
					fixed: 1 1;
					align: 0.5 0.0;
					image {
						normal: "white/common/00_popup_tail_bottom.png";
					}
				}
			}
		}
		programs {
			program {
				name: "enable_left_arrow";
				signal: "elm,state,left";
				source: "elm";
				action: STATE_SET "left" 0.0;
				target: "ctxpopup_arrow";
			}
			program {
				name: "enable_right_arrow";
				signal: "elm,state,right";
				source: "elm";
				action: STATE_SET "right" 0.0;
				target: "ctxpopup_arrow";
			}
			program {
				name: "enable_top_arrow";
				signal: "elm,state,top";
				source: "elm";
				action: STATE_SET "top" 0.0;
				target: "ctxpopup_arrow";
			}
			program {
				name: "enable_bottom_arrow";
				signal: "elm,state,bottom";
				source: "elm";
				action: STATE_SET "bottom" 0.0;
				target: "ctxpopup_arrow";
			}
		}
	}

///////////////////////////////////////////////////////////////////////////////
	group {
		name: "elm/ctxpopup/icon_text_style_item/video/default";
		parts {
			part {
				name: "event_blocker";
				mouse_events: 1;
				description {
					state: "default" 0.0;
				}
			}
			part {
				name: "bg";
				mouse_events: 0;
				type: RECT;
				description {
					state: "default" 0.0;
					color: CTXPOPUP_BG_COLOR_INC;
					visible: 0;
				}
				description {
					state: "clicked" 0.0;
					color: CTXPOPUP_BG_PRESS_COLOR_INC;
					visible: 1;
				}
				description {
					state: "clicked_separator" 0.0;
					rel1 { relative: 0.0 1.0; to_y: "separator2"; }
					color: CTXPOPUP_BG_PRESS_COLOR_INC;
					visible: 1;
				}
			}
			part {
				name:"separator_left_padding";
				type:RECT;
				scale: 1;
				mouse_events: 0;
				description {
					min: CTXPOPUP_SEPARATOR_PADDING_INC 0;
					max: CTXPOPUP_SEPARATOR_PADDING_INC 0;
					align: 0 0;
					fixed: 1 1;
					visible: 0;
				}
			}
			part {
				name:"separator_right_padding";
				type:RECT;
				scale: 1;
				mouse_events: 0;
				description {
					min: CTXPOPUP_SEPARATOR_PADDING_INC 0;
					max: CTXPOPUP_SEPARATOR_PADDING_INC 0;
					align: 1 1;
					fixed: 1 1;
					visible: 0;
				}
			}
			part {
				name: "icon_left_padding";
				scale: 1;
				mouse_events: 0;
				description {
					state: "default" 0.0;
					min: (CTXPOPUP_ITEM_ICON_PADDING_INC-CTXPOPUP_CONTENT_PADDING) CTXPOPUP_ITEM_HEIGHT_MIN_INC;
					max: (CTXPOPUP_ITEM_ICON_PADDING_INC-CTXPOPUP_CONTENT_PADDING) CTXPOPUP_ITEM_HEIGHT_MAX_INC;
					align: 0 0;
					fixed: 1 1;
					visible: 0;
				}
			}
			part {
				name: "separator1";
				mouse_events: 0;
				type: RECT;
				scale: 1;
				description {
					state: "default" 0.0;
					color: CTXPOPUP_SEPARATOR_COLOR_INC;
					rel1 { relative: 1.0 0.0; to_x: "separator_left_padding";}
					rel2 { relative: 0.0 1.0; to_x: "separator_right_padding";}
					align: 0.5 0;
					min: 0 CTXPOPUP_SEPARATOR_PXLINE_SIZE_INC;
					max: 999999 CTXPOPUP_SEPARATOR_PXLINE_SIZE_INC;
					visible: 0;
				}
				description {
					state: "visible" 0.0;
					inherit: "default" 0.0;
					visible: 0;
				}
			}
			part {
				name: "separator2";
				mouse_events: 0;
				type: RECT;
				scale: 1;
				description {
					state: "default" 0.0;
					color: CTXPOPUP_SEPARATOR2_COLOR_INC;
					rel1 { relative: 0.0 1.0; to: "separator1";}
					rel2 { relative: 1.0 1.0; to: "separator1";}
					align: 0.5 0;
					fixed: 0 1;
					min: 0 CTXPOPUP_SEPARATOR_PXLINE_SIZE_INC;
					max: 999999 CTXPOPUP_SEPARATOR_PXLINE_SIZE_INC;
					visible: 0;
				}
				description {
					state: "visible" 0.0;
					inherit: "default" 0.0;
					visible: 0;
				}
			}
			part {
				name: "elm.swallow.icon";
				type: SWALLOW;
				scale: 1;
				description {
					state: "default" 0.0;
					min: CTXPOPUP_ICON_WIDTH_INC CTXPOPUP_ICON_HEIGHT_INC;
					max: CTXPOPUP_ICON_WIDTH_INC CTXPOPUP_ICON_HEIGHT_INC;
					align: 0 0.5;
					aspect: 1.0 1.0;
					rel1 { to:"icon_left_padding"; relative: 1 0; }
				}
			}
			part {
				name: "icon_right_padding";
				scale: 1;
				mouse_events: 0;
				description {
					state: "default" 0.0;
					min: CTXPOPUP_ITEM_ICON_PADDING_INC CTXPOPUP_ITEM_HEIGHT_MIN_INC;
					max: CTXPOPUP_ITEM_ICON_PADDING_INC CTXPOPUP_ITEM_HEIGHT_MAX_INC;
					align: 0 0.5;
					fixed: 1 1;
					visible: 0;
					rel1 { to:"elm.swallow.icon"; relative: 1 1; }
				}
			}
			part {
				name: "elm.text";
				type:  TEXT;
				mouse_events:  0;
				scale: 1;
				description {
					state: "default" 0.0;
					min: 1 CTXPOPUP_ITEM_HEIGHT_MIN_INC;
					align: 0.5 0.5;
					rel1 {relative: 1.0 0.0; to_x: "icon_right_padding"; to_y: "bg";}
					rel2 {relative: 0.0 1.0; to_x: "text_right_padding"; to_y: "bg";}
					color: CTXPOPUP_LIST_MAIN_TEXT_COLOR_INC;
					text {
						font: "Tizen:style=Roman";
						size: CTXPOPUP_LIST_MAIN_TEXT_SIZE_INC;
						align: 0.0 0.5;
						min: 1 1;
					}
				}
				description {
					state: "compress" 0.0;
					inherit: "default" 0.0;
					max: -1 -1;
					text {
						min: 0 1;
					}
				}
				description {
					state: "clicked" 0.0;
					inherit: "default" 0.0;
					color: CTXPOPUP_LIST_MAIN_TEXT_PRESS_COLOR_INC;
				}
				description {
					state: "disabled" 0.0;
					inherit: "default" 0.0;
					color: CTXPOPUP_LIST_MAIN_TEXT_DIM_COLOR_INC;
				}
				description {
					state: "compress_disabled" 0.0;
					inherit: "compress" 0.0;
					color: CTXPOPUP_LIST_MAIN_TEXT_DIM_COLOR_INC;
				}
			}
			part {
				name: "text_right_padding";
				type: RECT;
				scale: 1;
				mouse_events: 0;
				description {
					state: "default" 0.0;
					visible: 0;
					min: CTXPOPUP_ITEM_TEXT_PADDING_INC CTXPOPUP_ITEM_HEIGHT_MIN_INC;
					max: CTXPOPUP_ITEM_TEXT_PADDING_INC CTXPOPUP_ITEM_HEIGHT_MAX_INC;
					fixed: 1 0;
					align: 1.0 0.5;
			}
			}
			part {
				name: "over1";
				mouse_events: 1;
				repeat_events: 1;
				description {
					state: "default" 0.0;
				}
			}
			part {
				name: "over2";
				mouse_events: 1;
				repeat_events: 1;
				description {
					state: "default" 0.0;
				}
			}
			part {
				name: "disclip";
				type: RECT;
				description {
					state: "default" 0.0;
					visible: 0;
				}
				description {
					state: "disabled" 0.0;
					visible: 1;
					color: CTXPOPUP_ITEM_DISABLED_COLOR;
				}
			}
		}
		programs {
			program {
				name: "item_unclick";
				signal: "mouse,clicked,1";
				source: "over1";
				action: SIGNAL_EMIT "elm,action,click" "";
			}
			program {
				name: "disable";
				signal: "elm,state,disabled";
				source: "elm";
				script {
					new st[31];
					new Float:vl;
					get_state(PART:"elm.text", st, 30, vl);
					if ((!strcmp(st, "compress")) || (!strcmp(st, "compress_disabled")))
						set_state(PART:"elm.text", "compress_disabled", 0.0);
					else
						set_state(PART:"elm.text", "disabled", 0.0);

					set_state(PART:"disclip", "disabled", 0.0);
				}
			}
			program {
				name: "enable";
				signal: "elm,state,enabled";
				source: "elm";
				script {
					new st[31];
					new Float:vl;
					get_state(PART:"elm.text", st, 30, vl);
					if ((!strcmp(st, "compress")) || (!strcmp(st, "compress_disabled")))
						set_state(PART:"elm.text", "compress", 0.0);
					else
						set_state(PART:"elm.text", "default", 0.0);

					set_state(PART:"disclip", "default", 0.0);
				}
			}
			program {
				name: "default";
				signal: "elm,state,default";
				source: "elm";
				script {
					set_state(PART:"separator1", "default", 0.0);
					set_state(PART:"separator2", "default", 0.0);
				}
			}
			program {
				name: "compress";
				signal: "elm,state,compress";
				source: "elm";
				script {
					new st[31];
					new Float:vl;
					get_state(PART:"disclip", st, 30, vl);
					if (!strcmp(st, "disabled"))
						set_state(PART:"elm.text", "compress_disabled", 0.0);
					else
						set_state(PART:"elm.text", "compress", 0.0);
				}
			}
			program {
				name: "separator";
				signal: "elm,state,separator";
				source: "elm";
				script {
					set_state(PART:"separator1", "visible", 0.0);
					set_state(PART:"separator2", "visible", 0.0);
				}
			}
			program {
				name: "item_click2";
				signal: "mouse,down,1";
				source: "over2";
				script {
					set_state(PART:"elm.text", "clicked", 0.0);

					new st[31];
					new Float:vl;
					get_state(PART:"separator2", st, 30, vl);
					if (!strcmp(st, "default"))
						set_state(PART:"bg", "clicked", 0.0);
					else
						set_state(PART:"bg", "clicked_separator", 0.0);
				}
			}
			program {
				name: "item_unclick2";
				signal: "mouse,up,1";
				source: "over2";
				script {
					set_state(PART:"elm.text", "compress", 0.0);
					set_state(PART:"bg", "default", 0.0);
				}
			}
		}
	}
