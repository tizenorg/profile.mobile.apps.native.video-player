/*
* Copyright (c) 2000-2015 Samsung Electronics Co., Ltd All Rights Reserved
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
* http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*
*/

#define NOCONTENT_TEXT_BLOCK_TEXT_SIZE_INC 32*0.444
#define NOCONTENT_TEXT_BLOCK_STYLE_COLOR_INC 173 170 165 255

#define NOCONTENT_BG_COLOR_INC               0 0 0 0
#define NOCONTENT_MIDDLE_PADDING_INC         38*0.444
#define NOCONTENT_IMAGE_COLOR_INC            128 128 128 255

#define NOCONTENT_TEXT_BLOCK_TEXT_SIZE_INC   36*0.444
#define NOCONTENT_HELP_TEXT_BLOCK_TEXT_SIZE_INC 25*0.444
#define NOCONTENT_IMAGE_WIDTH_HEIGHT_INC     112 112	//252 252
#define NOCONTENT_TEXT_STYLE_BG_MIN_INC      0 68*0.444
#define NOCONTENT_BASE_SEARCH_PADDING_INC    40*0.444
#define NOCONTENT_PORTRAIT_HELP_TEXT_STYLE_BG_MIN_INC 0 152*0.444
#define NOCONTENT_LANDSCAPE_HELP_TEXT_STYLE_BG_MIN_INC 0 78*0.444
#define NOCONTENT_SWALLOW_AREA_MIN_INC       0 80*0.444
#define NOCONTENT_PORTRAIT_AFTER_HELP_TEXT_PADDING_INC 70*0.444 90*0.444
#define NOCONTENT_LANDSCAPE_AFTER_HELP_TEXT_PADDING_INC 180*0.444 16*0.444
#define NOCONTENT_PORTRAIT_AFTER_TEXT_PADDING_INC    70*0.444 96*0.444
#define NOCONTENT_LANDSCAPE_AFTER_TEXT_PADDING_INC    180*0.444 16*0.444
#define NOCONTENT_BASE_PORTRAIT_MIN_WIDTH_HEIGHT_INC 0 460*0.444
#define NOCONTENT_BASE_LANDS_MIN_WIDTH_HEIGHT_INC 0 460*0.444
#define NOCONTENT_BASE_PORTRAIT_MIN_WIDTH_HEIGHT_WITH_TEXT 0 920*0.444
#define NOCONTENT_BASE_LANDS_MIN_WIDTH_HEIGHT_WITH_TEXT 0 570*0.444
#define NOCONTENT_PORTRAIT_BUTTON_PADDING_INC 16*0.444 80*0.444
#define NOCONTENT_LANDSCAPE_BUTTON_PADDING_INC 180*0.444 80*0.444

//#define MP_LIST_NO_CONTENT_IMAGE  "T02_video_noitem.png"
styles{
style { name: "nocontent_style";
        base: "font=Tizen:style=Bold font_size="NOCONTENT_TEXT_BLOCK_TEXT_SIZE_INC" align=center color=#000000 wrap=mixed ellipsis=1.0";
        tag:  "br" "\n";
        tag:  "hilight" "+ font=Tizen:style=Bold";
        tag:  "b" "+ font=Tizen:style=Bold";
        tag:  "tab" "\t";
}
style { name: "nocontent_style_dim";
        base: "font=Tizen:style=Bold font_size="NOCONTENT_TEXT_BLOCK_TEXT_SIZE_INC" align=center color=#000000 wrap=mixed ellipsis=1.0";
        tag:  "br" "\n";
        tag:  "hilight" "+ font=Tizen:style=Bold";
        tag:  "b" "+ font=Tizen:style=Bold";
        tag:  "tab" "\t";
}
style { name: "nocontent_help_text";
        base: "font=Tizen:style=Regular font_size="NOCONTENT_HELP_TEXT_BLOCK_TEXT_SIZE_INC" align=center color=#000000 wrap=mixed ellipsis=1.0";
        tag:  "br" "\n";
        tag:  "hilight" "+ font=Tizen:style=Regular";
        tag:  "b" "+ font=Tizen:style=Regular";
        tag:  "tab" "\t";
}
}

group { name: "nocontents_layout";
   parts {
      part { name: "contents";
         type: SWALLOW;
         description { state: "default" 0.0;
         }
      }
      part { name: "access";
         type: RECT;
         repeat_events: 1;
         description { state: "default" 0.0;
            rel1.to: "contents";
            rel2.to: "contents";
            color: 0 0 0 0;
         }
      }
   }
}

group {
	name: "elm/layout/nocontents/video";
	alias: "elm/nocontents/base/full";
	alias: "elm/nocontents/base/default";
	alias: "elm/nocontents/base/text";
	
	script {
		public center_align = 0;
		public landscape_mode = 0;
	}

   parts {
      part { name: "bg";
         type: SPACER;
         scale: 1;
         description { state: "default" 0.0;
            fixed: 0 1;
            min: NOCONTENT_BASE_PORTRAIT_MIN_WIDTH_HEIGHT_INC;
            rel1 {
               relative: 0.0 0.0; offset:0 222;	//0 500;
            }
            rel2 {
               relative: 1.0 0.0;offset:0 222;	//0 500;
            }
         }
         description { state: "help_txt_port_centre_align";
            inherit: "default" 0.0;
            min: NOCONTENT_BASE_PORTRAIT_MIN_WIDTH_HEIGHT_WITH_TEXT;
         }
         description { state: "landscape" 0.0;
            inherit: "default" 0.0;
	       rel1 {
               relative: 0.0 0.0; offset:0 280*0.444;
            }
            rel2 {
               relative: 1.0 0.0;offset:0 280*0.444;
            }
            min: NOCONTENT_BASE_LANDS_MIN_WIDTH_HEIGHT_INC;
         }
         description { state: "help_txt_lands_centre_align";
            inherit: "landscape" 0.0;
            min: NOCONTENT_BASE_LANDS_MIN_WIDTH_HEIGHT_WITH_TEXT;
         }
      }
      part { name: "nocontents.image";
      		type: SWALLOW;
         description { state: "default" 0.0;
            fixed: 1 1;
            min: 252 252;
            align: 0.5 0.0;
            rel1 {
               relative: 0.5 275/1109;
               to: "bg";
            }
            rel2 {
               relative: 0.5 275/1109;
               to: "bg";
            }
            color: 255 255 255 255;
            aspect: 1.0 1.0;
            aspect_preference: BOTH;
         }
      }
      part { name: "elm.text";
         type: TEXTBLOCK;
         description { state: "default" 0.0;
            min: 0 68;
            align: 0.5 0.0;
            fixed: 0 1;
            rel1 {
               relative: 0.0 1.0;
               to_y: "nocontents.image";
            }
            rel2 {
               relative: 1.0 1.0;
               to_y: "nocontents.image";
            }
            text {
               style: "nocontent_style";
               min: 0 1;
               max: 0 1;
            }
         }
         description { state: "disabled" 1.0;
            inherit: "default" 0.0;
            text {
               style: "nocontent_style_dim";
               min: 0 1;
               max: 0 1;
            }
         }
      }
      part { name: "padding_after_text";
         mouse_events: 0;
         type: SPACER;
         description { state: "default" 0.0;
            align: 0.0 0.0;
            min: 70 5;
            fixed: 1 1;
            rel1 {
               relative: 0.0 1.0;
               to_y: "elm.text";
            }
            rel2 {
               relative: 0.0 1.0;
               to_y: "elm.text";
            }
         }
         description { state: "landscape" 0.0;
            inherit: "default" 0.0;
            min: 180 16;
         }
      }
      part { name: "elm.help.text";
         type: TEXTBLOCK;
         description { state: "default" 0.0;
            align: 0.0 0.0;
            min: NOCONTENT_PORTRAIT_HELP_TEXT_STYLE_BG_MIN_INC;
            fixed: 1 1;
            rel1 {
               relative: 1.0 1.0;
               to: "padding_after_text";
            }
            rel2 {
               relative: 0.0 1.0;
               to_x: "pad_after_help_text";
               to_y: "padding_after_text";
            }
            text {
               style: "nocontent_help_text";
               align: 0.0 0.5;
               min: 0 1;
               max: 0 1;
            }
         }
         description { state: "landscape" 0.0;
            inherit: "default" 0.0;
            min: NOCONTENT_LANDSCAPE_HELP_TEXT_STYLE_BG_MIN_INC;
         }
      }
      part { name: "pad_after_help_text";
         mouse_events: 0;
         type: SPACER;
         description { state: "default" 0.0;
            align: 1.0 0.0;
            min: 70 25;
            fixed: 1 1;
            rel1 {
               relative: 1.0 1.0;
               to_y: "elm.help.text";
            }
            rel2 {
               relative: 1.0 1.0;
               to_y: "elm.help.text";
            }
         }
         description { state: "landscape" 0.0;
            inherit: "default" 0.0;
            min: 180 5;
         }
      }
      part { name: "swallow_area";
         type: SWALLOW;
         description { state: "default" 0.0;
            min: NOCONTENT_SWALLOW_AREA_MIN_INC;
            fixed: 1 1;
            align: 0.5 0.0;
            rel1 {
	       relative: 0.0 1.0; to_x: "bg"; to_y: "pad_after_help_text"; offset: 16 0;
            }
            rel2 {
               relative: 1.0 1.0; to_x: "bg"; to_y: "pad_after_help_text"; offset: -16 0;
            }
         }
        description { state: "landscape" 0.0;
            inherit: "default";
            rel1 {
               relative: 1.0 1.0;
               to_x: "padding_after_text";
               to_y: "pad_after_help_text";
            }
            rel2 {
               relative: 0.0 1.0;
               to: "pad_after_help_text";
            }
         }
      }
   }
   programs {
      program { name: "landscape_mode";
         source: "elm";
         signal: "elm,state,orient,90";
         script {
            set_int(landscape_mode, 1);
            if (get_int(center_align) == 1)
               set_state(PART:"bg", "help_txt_lands_centre_align", 0.0);
            else
               set_state(PART:"bg", "landscape", 0.0);
            set_state(PART:"elm.help.text", "landscape", 0.0);
            set_state(PART:"padding_after_text", "landscape", 0.0);
            set_state(PART:"pad_after_help_text", "landscape", 0.0);
            set_state(PART:"swallow_area", "landscape", 0.0);
         }
      }
      program { name: "landscape_mode2";
         source: "elm";
         signal: "elm,state,orient,270";
         script {
            set_int(landscape_mode, 1);
            if (get_int(center_align) == 1)
               set_state(PART:"bg", "help_txt_lands_centre_align", 0.0);
            else
               set_state(PART:"bg", "landscape", 0.0);
            set_state(PART:"elm.help.text", "landscape", 0.0);
            set_state(PART:"padding_after_text", "landscape", 0.0);
            set_state(PART:"pad_after_help_text", "landscape", 0.0);
            set_state(PART:"swallow_area", "landscape", 0.0);
         }
      }
      program { name: "portrait_mode";
         source: "elm";
         signal: "elm,state,orient,0";
         script {
            set_int(landscape_mode, 0);
            if (get_int(center_align) == 1)
               set_state(PART:"bg", "help_txt_port_centre_align", 0.0);
            else
               set_state(PART:"bg", "default", 0.0);
            set_state(PART:"elm.help.text", "default", 0.0);
            set_state(PART:"padding_after_text", "default", 0.0);
            set_state(PART:"pad_after_help_text", "default", 0.0);
            set_state(PART:"swallow_area", "default", 0.0);
         }
      }
      program { name: "portrait_mode2";
         source: "elm";
         signal: "elm,state,orient,180";
         script {
            set_int(landscape_mode, 0);
            if (get_int(center_align) == 1)
               set_state(PART:"bg", "help_txt_port_centre_align", 0.0);
            else
               set_state(PART:"bg", "default", 0.0);
            set_state(PART:"elm.help.text", "default", 0.0);
            set_state(PART:"padding_after_text", "default", 0.0);
            set_state(PART:"pad_after_help_text", "default", 0.0);
            set_state(PART:"swallow_area", "default", 0.0);
         }
      }
      program { name: "disabled";
            signal: "text,disabled";
            source: "";
            action: STATE_SET "disabled" 0.0;
            target: "elm.text";
      }
      program { name: "align_center";
         signal: "align.center";
         source: "elm";
         script {
            if (get_int(landscape_mode) == 1)
               set_state(PART:"bg", "help_txt_lands_centre_align", 0.0);
            else
               set_state(PART:"bg", "help_txt_port_centre_align", 0.0);
            set_int(center_align, 1);
         }
      }
   }
}

   group {
      name: "elm/layout/nocontents/main_navi_video_search_result";

     parts {
      part { name: "bg";
         type: RECT;
         scale: 1;
         description { state: "default" 0.0;
            color: NOCONTENT_BG_COLOR_INC;
			rel1 { relative: 0.0 0.0;}
			rel2 { relative: 1.0 1.0;}
         }
      }

      part { name: "elm.text";
        type: TEXT;
        description { state: "default" 0.0;
           fixed: 0 1;
           align: 0.5 0.5;
           visible: 1;
           rel1 { relative: 0.0 0.0; to: "bg";}
           rel2 { relative: 1.0 1.0; to: "bg";}
		   color: 18 18 18 255;
           text {
              size: 36;
           }
        }
     }
    }
   }

   group {
      name: "elm/layout/nocontents/sub_navi_video_search_result";
      styles{
         style { name: "nocontent_style_text_sub";
            base: "font=Tizen:style=Roman font_size="NOCONTENT_TEXT_BLOCK_TEXT_SIZE_INC" align=center color=#ffffff wrap=word";
            tag:  "br" "\n";
            tag:  "hilight" "+ font=Tizen:style=Bold";
            tag:  "b" "+ font=Tizen:style=Bold";
            tag:  "tab" "\t";
         }
      }

      parts {
      part { name: "bg";
         type: RECT;
         scale: 1;
         description { state: "default" 0.0;
            color: NOCONTENT_BG_COLOR_INC;
			rel1 { relative: 0.0 0.0;}
			rel2 { relative: 1.0 1.0;}
         }
      }

      part { name: "elm.text";
        type: TEXTBLOCK;
        description {
		   state: "default" 0.0;
           fixed: 0 1;
           align: 0.5 0.28;
           visible: 1;
           rel1 { relative: 0.0 0.0; to: "bg";}
           rel2 { relative: 1.0 1.0; to: "bg";}
           color: NOCONTENT_TEXT_BLOCK_STYLE_COLOR_INC;
           text {
              style: "nocontent_style_text_sub";
              min: 0 0;
              max: 0 1;
           }
        }
     }
    }
  }
